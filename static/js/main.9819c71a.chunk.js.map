{"version":3,"sources":["redux/reducers/filters.js","redux/reducers/pizzas.js","redux/reducers/cart.js","redux/reducers/index.js","redux/store.js","components/Button.jsx","assets/img/pizza-logo.svg","components/Header.jsx","components/Categories.jsx","components/SortPopup.jsx","components/PizzaBlock/index.jsx","components/CartItem.jsx","components/PizzaBlock/LoadingBlock.jsx","redux/actions/pizzas.js","pages/Home.jsx","redux/actions/filters.js","assets/img/empty-cart.png","pages/Cart.jsx","redux/actions/cart.js","App.js","index.js"],"names":["initialState","category","sortBy","type","order","filters","state","action","payload","items","isLoaded","pizzas","totalPrice","totalCount","getTotalPrice","arr","reduce","sum","obj","price","getTotalSum","path","Object","values","split","firstKey","val","key","_get","cart","currentPizzaItems","id","newItems","currentTotalPrice","currentTotalCount","length","newObjItems","oldItems","slice","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Button","onClick","className","outline","children","classNames","Header","useSelector","to","width","src","logoSvg","alt","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Categories","React","memo","activeCategory","onClickCategory","map","name","index","SortPopup","activeSortType","onClickSortType","useState","visiblePopup","setVisiblePopup","sortRef","useRef","activeLabel","find","handlOutsideClick","e","includes","current","useEffect","document","body","addEventListener","ref","onSelectItem","defaultProps","PizzaBlock","imageUrl","types","sizes","onClickAddPizza","addedCount","availableTypes","availableSizes","activeType","setActiveType","activeSize","setActiveSize","onSelectType","active","disabled","size","onSelectSize","CartItem","onRemove","onMinus","onPlus","LoadingBlock","speed","backgroundColor","foregroundColor","cx","cy","r","x","y","rx","ry","setPizzas","categoryNames","sortItems","Home","dispatch","useDispatch","cartItems","axios","get","then","data","fetchPizzas","onSelectCategory","useCallback","onSelectSortType","handleAddPizzaToCart","Array","_","Cart","addedPizzas","keys","onRemoveItem","confirm","removeCartItem","onPlusItem","plusCartItem","onMinusItem","minusCartItem","href","console","log","cartEmptyImage","App","component","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9819c71a.chunk.js","sourcesContent":["const initialState = {\r\n    category: null,\r\n    sortBy: {\r\n        type: 'popular',\r\n        order: 'desc',\r\n    }\r\n}\r\nconst filters = (state = initialState, action) => {\r\n    if (action.type === 'SET_SORT_BY') {\r\n        return {\r\n            ...state,\r\n            sortBy: action.payload,\r\n        }\r\n    }\r\n\r\n    if (action.type === 'SET_CATEGORY') {\r\n        return {\r\n            ...state,\r\n            category: action.payload,\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default filters;","const initialState = {\r\n    items: [],\r\n    isLoaded: false\r\n}\r\n\r\nconst pizzas = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_PIZZAS':\r\n            return {\r\n                ...state,\r\n                items: action.payload,\r\n                isLoaded: true,\r\n            };\r\n        case 'SET_LOADED':\r\n            return {\r\n                ...state,\r\n                items: action.payload,\r\n                isLoaded: action.payload,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default pizzas;","const initialState = {\r\n    items: {},\r\n    totalPrice: 0,\r\n    totalCount: 0,\r\n\r\n};\r\n\r\nconst getTotalPrice = arr => arr.reduce((sum, obj) => obj.price + sum, 0);\r\n\r\nconst _get = (obj, path) => {\r\n    const [firstKey, ...keys] = path.split('.');\r\n    return keys.reduce((val, key) => {\r\n        return val[key];\r\n    }, obj[firstKey]);\r\n};\r\n\r\nconst getTotalSum = (obj, path) => {\r\n    return Object.values(obj).reduce((sum, obj) => {\r\n        const value = _get(obj, path);\r\n        return sum + value;\r\n    }, 0);\r\n};\r\n\r\nconst cart = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_PIZZA_CART': {\r\n            const currentPizzaItems = !state.items[action.payload.id]\r\n                ? [action.payload]\r\n                : [...state.items[action.payload.id].items, action.payload];\r\n\r\n            const newItems = {\r\n                ...state.items,\r\n                [action.payload.id]: {\r\n                    items: currentPizzaItems,\r\n                    totalPrice: getTotalPrice(currentPizzaItems),\r\n                },\r\n            };\r\n\r\n            const totalCount = getTotalSum(newItems, 'items.length');\r\n            const totalPrice = getTotalSum(newItems, 'totalPrice');\r\n\r\n            // const totalCount = Object.keys(newItems).reduce(\r\n            //     (sum, key) => newItems[key].totalPrice + sum, 0);\r\n\r\n            // const totalPrice = Object.keys(newItems).reduce(\r\n            //     (sum, key) => newItems[key].items.length + sum, 0);\r\n\r\n            // const totalPrice = getTotalPrice(allPizzas);\r\n\r\n            return {\r\n                ...state,\r\n                items: newItems,\r\n                totalCount,\r\n                totalPrice,\r\n            };\r\n        }\r\n\r\n        case 'CLEAR_CART':\r\n            return {\r\n                totalPrice: 0,\r\n                totalCount: 0,\r\n                items: {},\r\n            };\r\n\r\n        case 'REMOVE_CART_ITEM':\r\n            const newItems = {\r\n                ...state.items,\r\n            };\r\n            const currentTotalPrice = newItems[action.payload].totalPrice;\r\n            const currentTotalCount = newItems[action.payload].items.length;\r\n\r\n            delete newItems[action.payload];\r\n            return {\r\n                ...state,\r\n                items: newItems,\r\n                totalPrice: state.totalPrice - currentTotalPrice,\r\n                totalCount: state.totalCount - currentTotalCount,\r\n            };\r\n\r\n        case 'PLUS_CART_ITEM': {\r\n            const newObjItems = [\r\n                ...state.items[action.payload].items,\r\n                state.items[action.payload].items[0]\r\n            ];\r\n\r\n            const newItems = {\r\n                ...state.items,\r\n                [action.payload]: {\r\n                    items: newObjItems,\r\n                    totalPrice: getTotalPrice(newObjItems),\r\n                },\r\n            };\r\n\r\n            const totalCount = getTotalSum(newItems, 'items.length');\r\n            const totalPrice = getTotalSum(newItems, 'totalPrice');\r\n\r\n            return {\r\n                ...state,\r\n                items: newItems,\r\n                totalPrice,\r\n                totalCount,\r\n            };\r\n        }\r\n\r\n        case 'MINUS_CART_ITEM': {\r\n            const oldItems = state.items[action.payload].items;\r\n            const newObjItems = oldItems.length > 1 ? state.items[action.payload].items.slice(1) : oldItems;\r\n            const newItems = {\r\n                ...state.items,\r\n                [action.payload]: {\r\n                    items: newObjItems,\r\n                    totalPrice: getTotalPrice(newObjItems),\r\n                },\r\n            };\r\n            const totalCount = getTotalSum(newItems, 'items.length');\r\n            const totalPrice = getTotalSum(newItems, 'totalPrice');\r\n            return {\r\n                ...state,\r\n                items: newItems,\r\n                totalCount,\r\n                totalPrice\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default cart;\r\n\r\n\r\n","import { combineReducers } from 'redux';\r\n\r\nimport filters from './filters';\r\nimport pizzas from './pizzas';\r\nimport cart from './cart';\r\n\r\nconst rootReducer = combineReducers({\r\n    filters,\r\n    pizzas,\r\n    cart,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(thunk)));\r\n\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nfunction Button({ onClick, className, outline, children }) {\r\n    return (\r\n        <button\r\n            onClick={onClick}\r\n            className={classNames('button', className, {\r\n                'button--outline': outline,\r\n            })}>\r\n            {children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;","export default __webpack_public_path__ + \"static/media/pizza-logo.56ac8703.svg\";","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport logoSvg from '../assets/img/pizza-logo.svg';\r\nimport Button from './Button'\r\n\r\nfunction Header() {\r\n\r\n    // const { totalPrice, totalCount } = useSelector(({ cart }) => ({\r\n    //     totalPrice: cart.totalPrice,\r\n    //     totalCount: cart.totalCount,\r\n    // }));\r\n\r\n    const { totalPrice, totalCount } = useSelector(({ cart }) => cart);\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"container\">\r\n                <Link to={\"/\"}>\r\n                    <div className=\"header__logo\">\r\n                        <img width=\"38\" src={logoSvg} alt=\"Pizza logo\" />\r\n                        <div>\r\n                            <h1>React Pizza</h1>\r\n                            <p>the most delicious pizza</p>\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n                <div className=\"header__cart\">\r\n                    <Link to=\"/cart\">\r\n                        <Button className=\"button--cart\">\r\n                            <span>{totalPrice} $</span>\r\n                            <div className=\"button__delimiter\"></div>\r\n                            <svg\r\n                                width=\"18\"\r\n                                height=\"18\"\r\n                                viewBox=\"0 0 18 18\"\r\n                                fill=\"none\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                            >\r\n                                <path\r\n                                    d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\"\r\n                                    stroke=\"white\"\r\n                                    strokeWidth=\"1.8\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                />\r\n                                <path\r\n                                    d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\"\r\n                                    stroke=\"white\"\r\n                                    strokeWidth=\"1.8\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                />\r\n                                <path\r\n                                    d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\"\r\n                                    stroke=\"white\"\r\n                                    strokeWidth=\"1.8\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                />\r\n                            </svg>\r\n                            <span>{totalCount}</span>\r\n                        </Button>\r\n                    </Link>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react'\r\n\r\nconst Categories = React.memo(function Categories({ activeCategory, items, onClickCategory }) {\r\n\r\n    return (\r\n        <div className=\"categories\">\r\n            <ul>\r\n                <li className={activeCategory === null ? 'active' : ''}\r\n                    onClick={() => onClickCategory(null)}>All</li>\r\n                {items &&\r\n                    items.map((name, index) =>\r\n                        <li\r\n                            className={activeCategory === index ? 'active' : ''}\r\n                            onClick={() => onClickCategory(index)}\r\n                            key={`${name}_${index}`}>\r\n                            {name}\r\n                        </li>\r\n                    )}\r\n            </ul>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Categories\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nconst SortPopup = React.memo(function SortPopup({ items, activeSortType, onClickSortType }) {\r\n    const [visiblePopup, setVisiblePopup] = React.useState(false);\r\n    const sortRef = React.useRef();\r\n    const activeLabel = items.find((obj) => obj.type === activeSortType).name;\r\n\r\n    const toggleVisiblePopup = () => {\r\n        setVisiblePopup(!visiblePopup);\r\n    };\r\n\r\n    const handlOutsideClick = (e) => {\r\n        if (!e.path.includes(sortRef.current)) {\r\n            setVisiblePopup(false);\r\n        }\r\n    }\r\n\r\n    const onSelectItem = (index) => {\r\n        onClickSortType(index);\r\n        setVisiblePopup(false);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        document.body.addEventListener('click', handlOutsideClick);\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div ref={(sortRef)} className=\"sort\">\r\n            <div className=\"sort__label\">\r\n                <svg className={visiblePopup ? 'rotated' : ''}\r\n                    width=\"10\"\r\n                    height=\"6\"\r\n                    viewBox=\"0 0 10 6\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <path\r\n                        d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\r\n                        fill=\"#2C2C2C\"\r\n                    />\r\n                </svg>\r\n                <b>Sort by:</b>\r\n                <span onClick={toggleVisiblePopup}>{activeLabel}</span>\r\n            </div>\r\n            {visiblePopup &&\r\n                <div className=\"sort__popup\">\r\n                    <ul>\r\n                        {\r\n                            items.map((obj, index) =>\r\n                                <li\r\n                                    onClick={() => onSelectItem(obj)}\r\n                                    className={activeSortType === obj.type ? 'active' : ''}\r\n                                    key={`${obj.type}_${index}`}>\r\n                                    {obj.name}\r\n                                </li>\r\n                            )}\r\n                    </ul>\r\n                </div>}\r\n        </div>\r\n    )\r\n})\r\n\r\nSortPopup.propTypes = {\r\n    activeSortType: propTypes.string.isRequired,\r\n    items: propTypes.arrayOf(propTypes.object).isRequired,\r\n    onClickSortType: propTypes.func.isRequired,\r\n};\r\n\r\nSortPopup.defaultProps = {\r\n    items: [],\r\n}\r\n\r\nexport default SortPopup\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '../Button';\r\n\r\n\r\nfunction PizzaBlock({ id, name, imageUrl, price, types, sizes, onClickAddPizza, addedCount }) {\r\n\r\n    const availableTypes = ['thin', 'traditional'];\r\n    const availableSizes = [26, 30, 40];\r\n\r\n    const [activeType, setActiveType] = React.useState(types[0]);\r\n    const [activeSize, setActiveSize] = React.useState(0);\r\n\r\n    const onSelectType = (index) => {\r\n        setActiveType(index);\r\n    };\r\n\r\n    const onSelectSize = (index) => {\r\n        setActiveSize(index);\r\n    };\r\n\r\n    const onAddPizza = () => {\r\n        const obj = {\r\n            id,\r\n            name,\r\n            imageUrl,\r\n            price,\r\n            size: availableSizes[activeSize],\r\n            type: availableTypes[activeType],\r\n        };\r\n        onClickAddPizza(obj);\r\n    };\r\n\r\n    return (\r\n\r\n        <div className=\"pizza-block\">\r\n            <img\r\n                className=\"pizza-block__image\"\r\n                src={imageUrl}\r\n                alt=\"Pizza\"\r\n            />\r\n            <h4 className=\"pizza-block__title\">{name}</h4>\r\n            <div className=\"pizza-block__selector\">\r\n                <ul>\r\n                    {availableTypes.map((type, index) => (\r\n                        <li\r\n                            key={type}\r\n                            onClick={() => onSelectType(index)}\r\n                            className={classNames({\r\n                                active: activeType === index,\r\n                                disabled: !types.includes(index),\r\n                            })}>\r\n                            {type}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                <ul>\r\n                    {availableSizes.map((size, index) => (\r\n                        <li\r\n                            key={size}\r\n                            onClick={() => onSelectSize(index)}\r\n                            className={classNames({\r\n                                active: activeSize === index,\r\n                                disabled: !sizes.includes(size),\r\n                            })}>\r\n                            {size} cm.\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            <div className=\"pizza-block__bottom\">\r\n                <div className=\"pizza-block__price\">{price} $</div>\r\n                <Button\r\n                    onClick={onAddPizza}\r\n                    className=\"button--add\"\r\n                    outline>\r\n                    <svg\r\n                        width=\"12\"\r\n                        height=\"12\"\r\n                        viewBox=\"0 0 12 12\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                        <path\r\n                            d=\"M10.8 4.8H7.2V1.2C7.2 0.5373 6.6627 0 6 0C5.3373 0 4.8 0.5373 4.8 1.2V4.8H1.2C0.5373 4.8 0 5.3373 0 6C0 6.6627 0.5373 7.2 1.2 7.2H4.8V10.8C4.8 11.4627 5.3373 12 6 12C6.6627 12 7.2 11.4627 7.2 10.8V7.2H10.8C11.4627 7.2 12 6.6627 12 6C12 5.3373 11.4627 4.8 10.8 4.8Z\"\r\n                            fill=\"white\"\r\n                        />\r\n                    </svg>\r\n                    <span>Add</span>\r\n                    {addedCount && <i>{addedCount}</i>}\r\n                </Button>\r\n            </div >\r\n        </div >\r\n    )\r\n}\r\n\r\nPizzaBlock.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    imageUrl: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    types: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n    sizes: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n    onClickAddPizza: PropTypes.func,\r\n    addedCount: PropTypes.number,\r\n};\r\n\r\nPizzaBlock.defaultProps = {\r\n    name: '---',\r\n    price: 0,\r\n    types: [],\r\n    size: [],\r\n};\r\n\r\nexport default PizzaBlock\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport Button from './Button';\r\n\r\n\r\nfunction CartItem({ id, name, type, size, totalPrice, totalCount, onRemove, onMinus, onPlus }) {\r\n\r\n    const handleRemoveClick = () => {\r\n        onRemove(id);\r\n    };\r\n\r\n    const handlePlusItem = () => {\r\n        onPlus(id);\r\n    };\r\n\r\n    const handleMinusItem = () => {\r\n        onMinus(id);\r\n    };\r\n\r\n    return (\r\n        <div className=\"cart__item\">\r\n            <div className=\"cart__item-img\">\r\n                <img\r\n                    className=\"pizza-block__image\"\r\n                    src=\"https://dodopizza-a.akamaihd.net/static/Img/Products/Pizza/ru-RU/b750f576-4a83-48e6-a283-5a8efb68c35d.jpg\"\r\n                    alt=\"Pizza\"\r\n                />\r\n            </div>\r\n            <div className=\"cart__item-info\">\r\n                <h3>{name}</h3>\r\n                <p>{type} dough, {size} cm.</p>\r\n            </div>\r\n            <div className=\"cart__item-count\">\r\n                <div\r\n                    onClick={handleMinusItem}\r\n                    className=\"button button--outline button--circle cart__item-count-minus\">\r\n                    <svg\r\n                        width=\"10\"\r\n                        height=\"10\"\r\n                        viewBox=\"0 0 10 10\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\" fill=\"#EB5A1E\" />\r\n                        <path d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\" fill=\"#EB5A1E\" />\r\n                    </svg>\r\n\r\n                </div>\r\n                <b>{totalCount}</b>\r\n                <div\r\n                    onClick={handlePlusItem}\r\n                    className=\"button button--outline button--circle cart__item-count-plus\">\r\n                    <svg\r\n                        width=\"10\"\r\n                        height=\"10\"\r\n                        viewBox=\"0 0 10 10\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\" fill=\"#EB5A1E\" />\r\n                        <path d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\" fill=\"#EB5A1E\" />\r\n                    </svg>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"cart__item-price\">\r\n                <b>{totalPrice} $</b>\r\n            </div>\r\n            <div className=\"cart__item-remove\">\r\n                <Button onClick={handleRemoveClick} className=\"button--circle\" outline>\r\n                    <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n                            fill=\"#EB5A1E\" />\r\n                        <path d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n                            fill=\"#EB5A1E\" />\r\n                    </svg>\r\n\r\n                </Button>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default CartItem\r\n","import React from 'react';\r\nimport ContentLoader from \"react-content-loader\";\r\n\r\nfunction LoadingBlock() {\r\n    return (\r\n        <ContentLoader\r\n            className=\"pizza-block\"\r\n            speed={2}\r\n            width={400}\r\n            height={460}\r\n            viewBox=\"0 0 400 460\"\r\n            backgroundColor=\"#f3f3f3\"\r\n            foregroundColor=\"#ecebeb\"\r\n        >\r\n            <circle cx=\"137\" cy=\"127\" r=\"123\" />\r\n            <rect x=\"-1\" y=\"263\" rx=\"3\" ry=\"3\" width=\"280\" height=\"22\" />\r\n            <rect x=\"-1\" y=\"301\" rx=\"6\" ry=\"6\" width=\"280\" height=\"84\" />\r\n            <rect x=\"71\" y=\"410\" rx=\"0\" ry=\"0\" width=\"3\" height=\"11\" />\r\n            <rect x=\"2\" y=\"412\" rx=\"3\" ry=\"3\" width=\"85\" height=\"30\" />\r\n            <rect x=\"154\" y=\"418\" rx=\"0\" ry=\"0\" width=\"0\" height=\"3\" />\r\n            <rect x=\"146\" y=\"407\" rx=\"20\" ry=\"20\" width=\"135\" height=\"45\" />\r\n        </ContentLoader>\r\n    );\r\n}\r\n\r\nexport default LoadingBlock\r\n","import axios from 'axios';\r\n\r\nexport const setLoaded = (payload) => ({\r\n    type: 'SET_LOADED',\r\n    payload,\r\n});\r\n\r\nexport const fetchPizzas = (sortBy, category) => (dispatch) => {\r\n    dispatch(setLoaded(false));\r\n    axios.get(\r\n        `/pizzas?${category !== null ? `category=${category}` : ''\r\n        }&_sort=${sortBy.type}&_order=${sortBy.order}`,\r\n    )\r\n        .then(({ data }) => {\r\n            dispatch(setPizzas(data));\r\n        });\r\n}\r\n\r\nexport const setPizzas = (items) => ({\r\n    type: 'SET_PIZZAS',\r\n    payload: items,\r\n});\r\n\r\n","import React from 'react'\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setCategory, setSortBy } from '../redux/actions/filters';\r\nimport { fetchPizzas } from '../redux/actions/pizzas';\r\n\r\nimport { Categories, SortPopup, PizzaBlock, PizzaLoadingBlock } from '../components';\r\n\r\nconst categoryNames = ['Meat', 'Vegetarian', 'Grill', 'Spicy', 'Closed'];\r\n\r\nconst sortItems = [\r\n    { name: 'popularity', type: 'popular', order: 'desc' },\r\n    { name: 'price', type: 'price', order: 'desc' },\r\n    { name: 'alphabet', type: 'name', order: 'asc' },\r\n];\r\n\r\nfunction Home() {\r\n    const dispatch = useDispatch();\r\n    const { items } = useSelector(({ pizzas }) => {\r\n        return {\r\n            items: pizzas.items,\r\n        };\r\n    });\r\n\r\n    const isLoaded = useSelector(({ pizzas }) => pizzas.isLoaded);\r\n    const { category, sortBy } = useSelector(({ filters }) => filters);\r\n    const cartItems = useSelector(({ cart }) => cart.items);\r\n\r\n    React.useEffect(() => {\r\n\r\n        dispatch(fetchPizzas(sortBy, category));\r\n\r\n    }, [category, sortBy]);\r\n\r\n    const onSelectCategory = React.useCallback((index) => {\r\n        dispatch(setCategory(index));\r\n    }, []);\r\n\r\n    const onSelectSortType = React.useCallback((type) => {\r\n        dispatch(setSortBy(type));\r\n    }, []);\r\n\r\n    const handleAddPizzaToCart = (obj) => {\r\n        dispatch({\r\n            type: 'ADD_PIZZA_CART',  //addPizzaToCard action\r\n            payload: obj,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"content__top\">\r\n                <Categories\r\n                    activeCategory={category}\r\n                    onClickCategory={onSelectCategory}\r\n                    items={categoryNames}\r\n                />\r\n                <SortPopup activeSortType={sortBy.type}\r\n                    items={sortItems}\r\n                    onClickSortType={onSelectSortType} />\r\n            </div>\r\n            <div className=\"content__items\">\r\n                {isLoaded\r\n                    ? items.map((obj) => (\r\n                        <PizzaBlock\r\n                            onClickAddPizza={handleAddPizzaToCart}\r\n                            key={obj.id}\r\n                            addedCount={cartItems[obj.id] && cartItems[obj.id].items.length}\r\n                            {...obj}\r\n                        />\r\n                    ))\r\n                    : Array(12).\r\n                        fill(0)\r\n                        .map((_, index) => <PizzaLoadingBlock key={index} />)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","export const setSortBy = (name) => ({\r\n    type: 'SET_SORT_BY',\r\n    payload: name,\r\n});\r\n\r\nexport const setCategory = (catIndex) => ({\r\n    type: 'SET_CATEGORY',\r\n    payload: catIndex,\r\n});\r\n\r\n","export default __webpack_public_path__ + \"static/media/empty-cart.db905d1f.png\";","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Button, CartItem } from '../components';\r\nimport { clearCart, removeCartItem, plusCartItem, minusCartItem } from '../redux/actions/cart';\r\nimport cartEmptyImage from '../assets/img/empty-cart.png';\r\n\r\nfunction Cart() {\r\n\r\n    const dispatch = useDispatch();\r\n    const { totalPrice, totalCount, items } = useSelector(({ cart }) => cart);\r\n\r\n    const addedPizzas = Object.keys(items).map(key => {\r\n        return items[key].items[0]; // вытаскиваем первый объект массива по ключу\r\n    });\r\n\r\n    const onClearCart = () => {\r\n        if (window.confirm('Are you sure you want to empty your cart?')) {\r\n            dispatch(clearCart());  //dispatch отправляет  объект в Redux\r\n        }\r\n    };\r\n\r\n    const onRemoveItem = (id) => {\r\n        if (window.confirm('Are you sure you want to delete?')) {\r\n            dispatch(removeCartItem(id));\r\n        }\r\n    };\r\n\r\n    const onPlusItem = (id) => {\r\n        dispatch(plusCartItem(id));\r\n    };\r\n\r\n    const onMinusItem = (id) => {\r\n        dispatch(minusCartItem(id));\r\n    };\r\n\r\n    const onClickOrder = () => {\r\n        console.log('Your order', items);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"container container--cart\">\r\n            {\r\n                totalCount ? <div className=\"cart\">\r\n                    <div className=\"cart__top\">\r\n                        <h2 className=\"content__title\"><svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\" stroke=\"white\" strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                            <path d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\" stroke=\"white\" strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                            <path d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\" stroke=\"white\" strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                        </svg>\r\n                            Cart</h2>\r\n                        <div className=\"cart__clear\">\r\n                            <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M2.5 5H4.16667H17.5\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                                <path d=\"M6.66663 5.00001V3.33334C6.66663 2.89131 6.84222 2.46739 7.15478 2.15483C7.46734 1.84227 7.89127 1.66667 8.33329 1.66667H11.6666C12.1087 1.66667 12.5326 1.84227 12.8451 2.15483C13.1577 2.46739 13.3333 2.89131 13.3333 3.33334V5.00001M15.8333 5.00001V16.6667C15.8333 17.1087 15.6577 17.5326 15.3451 17.8452C15.0326 18.1577 14.6087 18.3333 14.1666 18.3333H5.83329C5.39127 18.3333 4.96734 18.1577 4.65478 17.8452C4.34222 17.5326 4.16663 17.1087 4.16663 16.6667V5.00001H15.8333Z\"\r\n                                    stroke=\"#B6B6B6\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                                <path d=\"M8.33337 9.16667V14.1667\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                                <path d=\"M11.6666 9.16667V14.1667\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                            </svg>\r\n\r\n                            <span onClick={onClearCart}>Empty cart</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"content__items\">\r\n                        {\r\n                            addedPizzas.map(obj => (\r\n                                <CartItem\r\n                                    key={obj.id}\r\n                                    id={obj.id}\r\n                                    name={obj.name}\r\n                                    type={obj.type}\r\n                                    size={obj.size}\r\n                                    totalPrice={items[obj.id].totalPrice}\r\n                                    totalCount={items[obj.id].items.length}\r\n                                    onRemove={onRemoveItem}\r\n                                    onPlus={onPlusItem}\r\n                                    onMinus={onMinusItem}\r\n                                />\r\n                            ))}\r\n                    </div>\r\n                    <div className=\"cart__bottom\">\r\n                        <div className=\"cart__bottom-details\">\r\n                            <span> Total pizzas: <b>{totalCount} шт.</b> </span>\r\n                            <span> Total price: <b>{totalPrice}</b> </span>\r\n                        </div>\r\n                        <div className=\"cart__bottom-buttons\">\r\n                            <a href=\"/\" className=\"button button--outline button--add go-back-btn\">\r\n                                <svg\r\n                                    width=\"8\"\r\n                                    height=\"14\"\r\n                                    viewBox=\"0 0 8 14\"\r\n                                    fill=\"none\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path d=\"M7 13L1 6.93015L6.86175 1\"\r\n                                        stroke=\"#D3D3D3\"\r\n                                        strokeWidth=\"1.5\"\r\n                                        strokeLinecap=\"round\"\r\n                                        strokeLinejoin=\"round\" />\r\n                                </svg>\r\n                                <Link to=\"/\" >\r\n                                    <span>Come back</span>\r\n                                </Link>\r\n                            </a>\r\n                            <Button onClick={onClickOrder} className=\"pay-btn\">\r\n                                <span>Pay now</span>\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div> : <div className=\"cart cart--empty\">\r\n                    <h2>Cart is empty <i>😕</i></h2>\r\n                    <p>\r\n                        Most likely, you haven't ordered pizza yet..<br />\r\n                        To order pizza, go to the main page.\r\n                    </p>\r\n                    <img src={cartEmptyImage} alt=\"Empty cart\" />\r\n                    <Link to=\"/\" className=\"button button--black\">\r\n                        <span>Come back</span>\r\n                    </Link>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","export const addPizzaToCart = (pizzaObj) => ({\r\n    type: 'ADD_PIZZA_CART',\r\n    payload: pizzaObj,\r\n});\r\n\r\n\r\nexport const clearCart = () => ({\r\n    type: 'CLEAR_CART',\r\n});\r\n\r\n\r\nexport const removeCartItem = (id) => ({\r\n    type: 'REMOVE_CART_ITEM',\r\n    payload: id,\r\n});\r\n\r\n\r\nexport const plusCartItem = (id) => ({\r\n    type: 'PLUS_CART_ITEM',\r\n    payload: id,\r\n});\r\n\r\n\r\nexport const minusCartItem = (id) => ({\r\n    type: 'MINUS_CART_ITEM',\r\n    payload: id,\r\n});\r\n\r\n\r\n","import React from 'react';\n\nimport { Header } from './components';\nimport { Home, Cart } from './pages';\nimport { Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"wrapper\">\n      <Header />\n      <div className=\"content\">\n        <Route path=\"/\" component={Home} exact />\n        <Route path=\"/cart\" component={Cart} exact />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './redux/store';\n\nimport './scss/app.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}